// <auto-generated />
using System;
using MediaLibrary.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediaLibrary.Persistence.Migrations
{
    [DbContext(typeof(RepositoryDbContext))]
    [Migration("20250508174200_Group")]
    partial class Group
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("MediaLibrary.Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateInsert")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Favorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPaused")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReading")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pages")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("MediaLibrary.Domain.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MediaGroups");
                });

            modelBuilder.Entity("MediaLibrary.Domain.Entities.VideoGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateEdit")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateInsert")
                        .HasColumnType("TEXT");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Favorite")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("TEXT");

                    b.Property<float>("HoursPlayed")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsPaused")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPlaying")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("Plataforms")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tags")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("VideoGames");
                });

            modelBuilder.Entity("MediaLibrary.Domain.Entities.Book", b =>
                {
                    b.HasOne("MediaLibrary.Domain.Entities.Group", null)
                        .WithMany("Books")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("MediaLibrary.Domain.Entities.VideoGame", b =>
                {
                    b.HasOne("MediaLibrary.Domain.Entities.Group", null)
                        .WithMany("VideoGames")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("MediaLibrary.Domain.Entities.Group", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("VideoGames");
                });
#pragma warning restore 612, 618
        }
    }
}
